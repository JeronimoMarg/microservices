version: "3.9" # Latest stable version of Compose

services:
  producto-service:
    image: imagen_producto
    container_name: producto-service
    build:
      context: . # Path to the Dockerfile (current directory)
      dockerfile: Dockerfile
    ports:
      - "8083:8080" # Map random port to container port 8080
    deploy:
      replicas: 1
      #restart_policy:
        #condition: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/productos_db
      SPRING_DATASOURCE_USERNAME: productos_usuario
      SPRING_DATASOURCE_PASSWORD: productos_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - db # Ensure the database starts before the application
    networks:
      - producto-network
      - services-network

  db:
    image: postgres
    container_name: postgresql_db
    restart: always
    environment:
      POSTGRES_ROOT_PASSWORD: rootpassword
      POSTGRES_DB: productos_db
      POSTGRES_USER: productos_usuario
      POSTGRES_PASSWORD: productos_password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data # Persist database data
    networks:
      - producto-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: test@admin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8084:80"
    depends_on:
      - db
    networks:
      - producto-network

networks:
  producto-network:
    driver: bridge
  services-network:
    external: true

volumes:
  db_data: # Volume for database persistence
